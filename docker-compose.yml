version: '3'

services:
  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=monitoring
    volumes:
      - ./sql:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
  hbase:
    image: dajobe/hbase
    container_name: hbase
    hostname: hbase
    environment:
    - HBASE_DOCKER_HOSTNAME=hbase
  pixel-tracker:
    image: openjdk:11-jdk
    container_name: pixel-tracker
    hostname: pixel-tracker
    volumes:
      - ./tracking/target/tracking-0.0.1-SNAPSHOT.jar:/opt/tracker.jar
    command: java -jar -Dspring.profiles.active=docker /opt/tracker.jar
    ports:
      - "8081:8081"
    depends_on:
      - hbase
    environment:
      - HBASE_QUORUM=hbase:2181
      - HBASE_ROOT_DIR=file:////data/hbase
      - HBASE_NODEPARENT=/hbase
  reporter:
    image: openjdk:11-jdk
    container_name: reporter
    volumes:
      - ./reporter/target/reporter-0.0.1-SNAPSHOT.jar:/opt/reporter.jar
    command: java -Dspring.profiles.active=docker -jar /opt/reporter.jar
    depends_on:
      - hbase
      - postgres
  demo-site:
    image: httpd:2.4
    container_name: demo-site
    hostname: demo-site
    volumes:
      - ./demo-site:/usr/local/apache2/htdocs/
    ports:
      - "8080:80"
  admin:
    image: openjdk:11-jdk
    container_name: admin
    volumes:
      - ./admin/target/admin-0.0.1-SNAPSHOT.jar:/opt/admin.jar
    command: java -jar /opt/admin.jar
    ports:
      - "8084:8084"
  api:
    image: openjdk:11-jdk
    container_name: api
    hostname: api
    volumes:
    - ./api/target/api-0.0.1-SNAPSHOT.jar:/opt/api.jar
    command: java -Dspring.profiles.active=docker -jar /opt/api.jar
    depends_on:
      - postgres
    ports:
      - "8082:8082"